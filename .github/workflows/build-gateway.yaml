name: "[BACKEND] Test & Build - API Gateway"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "backend/gateway/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gateway
  DOCKERFILE_CONTEXT: "backend" # Build's context is the set of files located in the specified PATH or URL (default Git context)
  DOCKERFILE_TARGET: "runner" # Sets the target stage to build
  DOCKERFILE_FILE: "gateway/Dockerfile" # Path to the Dockerfile. (default {context}/Dockerfile)

jobs:
  scan-dockerfile:
    name: Security analyse Dockerfile
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v3

      ## Dockerfile linter
      ##
      - name: Run kics Scan
        uses: checkmarx/kics-github-action@v1.7.0
        with:
          path: ${{ env.DOCKERFILE_CONTEXT }}/${{ env.DOCKERFILE_FILE }}
          fail_on: high
          output_path: "results"
          output_formats: "sarif"

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/results.sarif

  build-and-push-image:
    name: Build and publish image
    runs-on: ubuntu-latest
    needs:
      - scan-dockerfile

    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3

      ## Authenticate to registry repo github
      ##
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ## Build and push Docker image
      ##
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.DOCKERFILE_CONTEXT }}
          file: ${{ env.DOCKERFILE_CONTEXT }}/${{ env.DOCKERFILE_FILE }}
          target: ${{ env.DOCKERFILE_TARGET }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
